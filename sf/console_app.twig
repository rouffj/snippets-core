### composer.json ###
{
    "require": {
        "symfony/console": "^5.3"
    },
    "require-dev": {
        "symfony/finder": "^5.3"
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    }
}

### console ###
<?php

require __DIR__.'/vendor/autoload.php';

use Symfony\Component\Console\Application;
use App\AppCommand;

$application = new Application();
$application->add(new AppCommand());
$application->run();

### src/AppCommand.php ###
<?php

namespace App;

use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Style\SymfonyStyle;


class AppCommand extends Command
{
    public function __construct()
    {
        parent::__construct('app');
    }

    protected function configure()
    {
        $this
            ->setDescription('@TODO Add a well documented description of what this command is doing.')
        ;
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $io = new SymfonyStyle($input, $output);

        $io->success('Hello from {{ command_name }} command :)!');

        return 0;
    }
}

### build/build_phar.php ###
<?php

require __DIR__.'/../vendor/autoload.php';
require __DIR__.'/PharBuilder.php';

$finder = PharBuilder::getFilesToIncludeInPharAsFinder();
$pharBuilder = new PharBuilder(__DIR__.'/{{ command_name }}.phar', $finder);

$pharBuilder->build();

### build/build.sh ###
#!/bin/sh
php build/build_phar.php
chmod +x build/{{ command_name }}.phar
cp build/{{ command_name }}.phar /usr/local/bin/{{ command_name }}
echo "{{ command_name }}.phar file compiled + accessible from commandline as /usr/local/bin/{{ command_name }} !"

### build/PharBuilder.php ###
<?php

require __DIR__.'/../vendor/autoload.php';

use Symfony\Component\Finder\Finder;

class PharBuilder
{
    private $pathToPhar;
    private $finder;

    const CONSOLE_FILE = 'console';

    public function __construct(string $pathToPhar, Finder $finder = null)
    {
        $this->pathToPhar = $pathToPhar;
        $this->finder = $finder;

        if (!$finder) {
            $this->finder = self::getFilesToIncludeInPharAsFinder();
        }
    }

    public function build()
    {
        // To build a .phar on a computer the following line should be added to your php.ini
        // $ echo "phar.readonly=0" >> /usr/local/etc/php/7.3/conf.d/enable-phar.ini"
        $phar = new \Phar($this->pathToPhar);
        $baseDirToRemoveFromFiles = __DIR__ . '/../';
        $phar->buildFromIterator($this->finder->getIterator(), $baseDirToRemoveFromFiles);
        // The parameter 'console' should be the related path inside the .phar file to the initScript
        $bootstrapScript = \Phar::createDefaultStub(self::CONSOLE_FILE);
        $phar->setStub("#!/usr/bin/env php\n" . $bootstrapScript);
    }

    public static function getFilesToIncludeInPharAsFinder()
    {
        $finder = new Finder();
        $finder
            ->in(__DIR__ . '/../')
            ->notPath('build/')
            ->files()
            ->name('*.php') // only PHP files will be included
            ->name(self::CONSOLE_FILE)
        ;

        return $finder;
    }
}
